

Microchip MPLAB XC8 Assembler V3.10 build 20250813170317 
                                                                                               Mon Sep 29 10:27:37 2025

Microchip MPLAB XC8 C Compiler v3.10 (Free license) build 20250813170317 Og1 
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=1
    11                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 09/02/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F47K40 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000FE0                     bsr             equ	4064
    52   000FE9                     fsr0            equ	4073
    53   000FEA                     fsr0h           equ	4074
    54   000FE9                     fsr0l           equ	4073
    55   000FE1                     fsr1            equ	4065
    56   000FE2                     fsr1h           equ	4066
    57   000FE1                     fsr1l           equ	4065
    58   000FD9                     fsr2            equ	4057
    59   000FDA                     fsr2h           equ	4058
    60   000FD9                     fsr2l           equ	4057
    61   000FEF                     indf0           equ	4079
    62   000FE7                     indf1           equ	4071
    63   000FDF                     indf2           equ	4063
    64   000FF2                     intcon          equ	4082
    65   000F81                     nvmcon          equ	3969
    66   000FF9                     pcl             equ	4089
    67   000FFA                     pclath          equ	4090
    68   000FFB                     pclatu          equ	4091
    69   000FEB                     plusw0          equ	4075
    70   000FE3                     plusw1          equ	4067
    71   000FDB                     plusw2          equ	4059
    72   000FED                     postdec0        equ	4077
    73   000FE5                     postdec1        equ	4069
    74   000FDD                     postdec2        equ	4061
    75   000FEE                     postinc0        equ	4078
    76   000FE6                     postinc1        equ	4070
    77   000FDE                     postinc2        equ	4062
    78   000FEC                     preinc0         equ	4076
    79   000FE4                     preinc1         equ	4068
    80   000FDC                     preinc2         equ	4060
    81   000FF3                     prod            equ	4083
    82   000FF4                     prodh           equ	4084
    83   000FF3                     prodl           equ	4083
    84   000FD8                     status          equ	4056
    85   000FF5                     tablat          equ	4085
    86   000FF6                     tblptr          equ	4086
    87   000FF7                     tblptrh         equ	4087
    88   000FF6                     tblptrl         equ	4086
    89   000FF8                     tblptru         equ	4088
    90   000FFD                     tosl            equ	4093
    91   000FE8                     wreg            equ	4072
    92   000E8D                     RX2PPS          equ	3725	;# 
    93   000E8E                     CK2PPS          equ	3726	;# 
    94   000E8E                     TX2PPS          equ	3726	;# 
    95   000E8F                     SSP2CLKPPS      equ	3727	;# 
    96   000E90                     SSP2DATPPS      equ	3728	;# 
    97   000E91                     SSP2SSPPS       equ	3729	;# 
    98   000E92                     SSP2BUF         equ	3730	;# 
    99   000E93                     SSP2ADD         equ	3731	;# 
   100   000E94                     SSP2MSK         equ	3732	;# 
   101   000E95                     SSP2STAT        equ	3733	;# 
   102   000E96                     SSP2CON1        equ	3734	;# 
   103   000E97                     SSP2CON2        equ	3735	;# 
   104   000E98                     SSP2CON3        equ	3736	;# 
   105   000E99                     RC2REG          equ	3737	;# 
   106   000E99                     RCREG2          equ	3737	;# 
   107   000E9A                     TX2REG          equ	3738	;# 
   108   000E9A                     TXREG2          equ	3738	;# 
   109   000E9B                     SP2BRG          equ	3739	;# 
   110   000E9B                     SP2BRGL         equ	3739	;# 
   111   000E9B                     SPBRG2          equ	3739	;# 
   112   000E9C                     SP2BRGH         equ	3740	;# 
   113   000E9C                     SPBRGH2         equ	3740	;# 
   114   000E9D                     RC2STA          equ	3741	;# 
   115   000E9D                     RCSTA2          equ	3741	;# 
   116   000E9E                     TX2STA          equ	3742	;# 
   117   000E9E                     TXSTA2          equ	3742	;# 
   118   000E9F                     BAUD2CON        equ	3743	;# 
   119   000E9F                     BAUDCON2        equ	3743	;# 
   120   000E9F                     BAUDCTL2        equ	3743	;# 
   121   000EA0                     PPSLOCK         equ	3744	;# 
   122   000EA1                     INT0PPS         equ	3745	;# 
   123   000EA2                     INT1PPS         equ	3746	;# 
   124   000EA3                     INT2PPS         equ	3747	;# 
   125   000EA4                     T0CKIPPS        equ	3748	;# 
   126   000EA5                     T1CKIPPS        equ	3749	;# 
   127   000EA6                     T1GPPS          equ	3750	;# 
   128   000EA7                     T3CKIPPS        equ	3751	;# 
   129   000EA8                     T3GPPS          equ	3752	;# 
   130   000EA9                     T5CKIPPS        equ	3753	;# 
   131   000EAA                     T5GPPS          equ	3754	;# 
   132   000EAB                     T2INPPS         equ	3755	;# 
   133   000EAC                     T4INPPS         equ	3756	;# 
   134   000EAD                     T6INPPS         equ	3757	;# 
   135   000EAE                     ADACTPPS        equ	3758	;# 
   136   000EAF                     CCP1PPS         equ	3759	;# 
   137   000EB0                     CCP2PPS         equ	3760	;# 
   138   000EB1                     CWG1PPS         equ	3761	;# 
   139   000EB1                     CWGINPPS        equ	3761	;# 
   140   000EB2                     MDCARLPPS       equ	3762	;# 
   141   000EB3                     MDCARHPPS       equ	3763	;# 
   142   000EB4                     MDSRCPPS        equ	3764	;# 
   143   000EB5                     RX1PPS          equ	3765	;# 
   144   000EB5                     RXPPS           equ	3765	;# 
   145   000EB6                     CK1PPS          equ	3766	;# 
   146   000EB6                     TX1PPS          equ	3766	;# 
   147   000EB6                     CKPPS           equ	3766	;# 
   148   000EB6                     TXPPS           equ	3766	;# 
   149   000EB7                     SSP1CLKPPS      equ	3767	;# 
   150   000EB7                     SSPCLKPPS       equ	3767	;# 
   151   000EB8                     SSP1DATPPS      equ	3768	;# 
   152   000EB8                     SSPDATPPS       equ	3768	;# 
   153   000EB9                     SSP1SSPPS       equ	3769	;# 
   154   000EB9                     SSPSSPPS        equ	3769	;# 
   155   000EBA                     IPR0            equ	3770	;# 
   156   000EBB                     IPR1            equ	3771	;# 
   157   000EBC                     IPR2            equ	3772	;# 
   158   000EBD                     IPR3            equ	3773	;# 
   159   000EBE                     IPR4            equ	3774	;# 
   160   000EBF                     IPR5            equ	3775	;# 
   161   000EC0                     IPR6            equ	3776	;# 
   162   000EC1                     IPR7            equ	3777	;# 
   163   000EC2                     PIE0            equ	3778	;# 
   164   000EC3                     PIE1            equ	3779	;# 
   165   000EC4                     PIE2            equ	3780	;# 
   166   000EC5                     PIE3            equ	3781	;# 
   167   000EC6                     PIE4            equ	3782	;# 
   168   000EC7                     PIE5            equ	3783	;# 
   169   000EC8                     PIE6            equ	3784	;# 
   170   000EC9                     PIE7            equ	3785	;# 
   171   000ECA                     PIR0            equ	3786	;# 
   172   000ECB                     PIR1            equ	3787	;# 
   173   000ECC                     PIR2            equ	3788	;# 
   174   000ECD                     PIR3            equ	3789	;# 
   175   000ECE                     PIR4            equ	3790	;# 
   176   000ECF                     PIR5            equ	3791	;# 
   177   000ED0                     PIR6            equ	3792	;# 
   178   000ED1                     PIR7            equ	3793	;# 
   179   000ED2                     WDTCON0         equ	3794	;# 
   180   000ED3                     WDTCON1         equ	3795	;# 
   181   000ED4                     WDTPSL          equ	3796	;# 
   182   000ED5                     WDTPSH          equ	3797	;# 
   183   000ED6                     WDTTMR          equ	3798	;# 
   184   000ED7                     CPUDOZE         equ	3799	;# 
   185   000ED8                     OSCCON1         equ	3800	;# 
   186   000ED9                     OSCCON2         equ	3801	;# 
   187   000EDA                     OSCCON3         equ	3802	;# 
   188   000EDB                     OSCSTAT         equ	3803	;# 
   189   000EDB                     OSCSTAT1        equ	3803	;# 
   190   000EDC                     OSCEN           equ	3804	;# 
   191   000EDD                     OSCTUNE         equ	3805	;# 
   192   000EDE                     OSCFRQ          equ	3806	;# 
   193   000EDF                     VREGCON         equ	3807	;# 
   194   000EE0                     BORCON          equ	3808	;# 
   195   000EE1                     PMD0            equ	3809	;# 
   196   000EE2                     PMD1            equ	3810	;# 
   197   000EE3                     PMD2            equ	3811	;# 
   198   000EE4                     PMD3            equ	3812	;# 
   199   000EE5                     PMD4            equ	3813	;# 
   200   000EE6                     PMD5            equ	3814	;# 
   201   000EE7                     RA0PPS          equ	3815	;# 
   202   000EE8                     RA1PPS          equ	3816	;# 
   203   000EE9                     RA2PPS          equ	3817	;# 
   204   000EEA                     RA3PPS          equ	3818	;# 
   205   000EEB                     RA4PPS          equ	3819	;# 
   206   000EEC                     RA5PPS          equ	3820	;# 
   207   000EED                     RA6PPS          equ	3821	;# 
   208   000EEE                     RA7PPS          equ	3822	;# 
   209   000EEF                     RB0PPS          equ	3823	;# 
   210   000EF0                     RB1PPS          equ	3824	;# 
   211   000EF1                     RB2PPS          equ	3825	;# 
   212   000EF2                     RB3PPS          equ	3826	;# 
   213   000EF3                     RB4PPS          equ	3827	;# 
   214   000EF4                     RB5PPS          equ	3828	;# 
   215   000EF5                     RB6PPS          equ	3829	;# 
   216   000EF6                     RB7PPS          equ	3830	;# 
   217   000EF7                     RC0PPS          equ	3831	;# 
   218   000EF8                     RC1PPS          equ	3832	;# 
   219   000EF9                     RC2PPS          equ	3833	;# 
   220   000EFA                     RC3PPS          equ	3834	;# 
   221   000EFB                     RC4PPS          equ	3835	;# 
   222   000EFC                     RC5PPS          equ	3836	;# 
   223   000EFD                     RC6PPS          equ	3837	;# 
   224   000EFE                     RC7PPS          equ	3838	;# 
   225   000EFF                     RD0PPS          equ	3839	;# 
   226   000F00                     RD1PPS          equ	3840	;# 
   227   000F01                     RD2PPS          equ	3841	;# 
   228   000F02                     RD3PPS          equ	3842	;# 
   229   000F03                     RD4PPS          equ	3843	;# 
   230   000F04                     RD5PPS          equ	3844	;# 
   231   000F05                     RD6PPS          equ	3845	;# 
   232   000F06                     RD7PPS          equ	3846	;# 
   233   000F07                     RE0PPS          equ	3847	;# 
   234   000F08                     RE1PPS          equ	3848	;# 
   235   000F09                     RE2PPS          equ	3849	;# 
   236   000F0A                     IOCAF           equ	3850	;# 
   237   000F0B                     IOCAN           equ	3851	;# 
   238   000F0C                     IOCAP           equ	3852	;# 
   239   000F0D                     INLVLA          equ	3853	;# 
   240   000F0E                     SLRCONA         equ	3854	;# 
   241   000F0F                     ODCONA          equ	3855	;# 
   242   000F10                     WPUA            equ	3856	;# 
   243   000F11                     ANSELA          equ	3857	;# 
   244   000F12                     IOCBF           equ	3858	;# 
   245   000F13                     IOCBN           equ	3859	;# 
   246   000F14                     IOCBP           equ	3860	;# 
   247   000F15                     INLVLB          equ	3861	;# 
   248   000F16                     SLRCONB         equ	3862	;# 
   249   000F17                     ODCONB          equ	3863	;# 
   250   000F18                     WPUB            equ	3864	;# 
   251   000F19                     ANSELB          equ	3865	;# 
   252   000F1A                     IOCCF           equ	3866	;# 
   253   000F1B                     IOCCN           equ	3867	;# 
   254   000F1C                     IOCCP           equ	3868	;# 
   255   000F1D                     INLVLC          equ	3869	;# 
   256   000F1E                     SLRCONC         equ	3870	;# 
   257   000F1F                     ODCONC          equ	3871	;# 
   258   000F20                     WPUC            equ	3872	;# 
   259   000F21                     ANSELC          equ	3873	;# 
   260   000F22                     INLVLD          equ	3874	;# 
   261   000F23                     SLRCOND         equ	3875	;# 
   262   000F24                     ODCOND          equ	3876	;# 
   263   000F25                     WPUD            equ	3877	;# 
   264   000F26                     ANSELD          equ	3878	;# 
   265   000F27                     IOCEF           equ	3879	;# 
   266   000F28                     IOCEN           equ	3880	;# 
   267   000F29                     IOCEP           equ	3881	;# 
   268   000F2A                     INLVLE          equ	3882	;# 
   269   000F2B                     SLRCONE         equ	3883	;# 
   270   000F2C                     ODCONE          equ	3884	;# 
   271   000F2D                     WPUE            equ	3885	;# 
   272   000F2E                     ANSELE          equ	3886	;# 
   273   000F2F                     HLVDCON0        equ	3887	;# 
   274   000F30                     HLVDCON1        equ	3888	;# 
   275   000F31                     FVRCON          equ	3889	;# 
   276   000F32                     ZCDCON          equ	3890	;# 
   277   000F33                     DAC1CON0        equ	3891	;# 
   278   000F34                     DAC1CON1        equ	3892	;# 
   279   000F35                     CM2CON0         equ	3893	;# 
   280   000F36                     CM2CON1         equ	3894	;# 
   281   000F37                     CM2NCH          equ	3895	;# 
   282   000F38                     CM2PCH          equ	3896	;# 
   283   000F39                     CM1CON0         equ	3897	;# 
   284   000F3A                     CM1CON1         equ	3898	;# 
   285   000F3B                     CM1NCH          equ	3899	;# 
   286   000F3C                     CM1PCH          equ	3900	;# 
   287   000F3D                     CMOUT           equ	3901	;# 
   288   000F3E                     CLKRCON         equ	3902	;# 
   289   000F3F                     CLKRCLK         equ	3903	;# 
   290   000F40                     CWG1CLK         equ	3904	;# 
   291   000F40                     CWG1CLKCON      equ	3904	;# 
   292   000F41                     CWG1ISM         equ	3905	;# 
   293   000F42                     CWG1DBR         equ	3906	;# 
   294   000F43                     CWG1DBF         equ	3907	;# 
   295   000F44                     CWG1CON0        equ	3908	;# 
   296   000F45                     CWG1CON1        equ	3909	;# 
   297   000F46                     CWG1AS0         equ	3910	;# 
   298   000F47                     CWG1AS1         equ	3911	;# 
   299   000F48                     CWG1STR         equ	3912	;# 
   300   000F49                     SCANLADR        equ	3913	;# 
   301   000F49                     SCANLADRL       equ	3913	;# 
   302   000F4A                     SCANLADRH       equ	3914	;# 
   303   000F4B                     SCANLADRU       equ	3915	;# 
   304   000F4C                     SCANHADR        equ	3916	;# 
   305   000F4C                     SCANHADRL       equ	3916	;# 
   306   000F4D                     SCANHADRH       equ	3917	;# 
   307   000F4E                     SCANHADRU       equ	3918	;# 
   308   000F4F                     SCANCON0        equ	3919	;# 
   309   000F50                     SCANTRIG        equ	3920	;# 
   310   000F51                     MDCON0          equ	3921	;# 
   311   000F52                     MDCON1          equ	3922	;# 
   312   000F53                     MDSRC           equ	3923	;# 
   313   000F54                     MDCARL          equ	3924	;# 
   314   000F55                     MDCARH          equ	3925	;# 
   315   000F56                     ADACT           equ	3926	;# 
   316   000F57                     ADCLK           equ	3927	;# 
   317   000F58                     ADREF           equ	3928	;# 
   318   000F59                     ADCON1          equ	3929	;# 
   319   000F5A                     ADCON2          equ	3930	;# 
   320   000F5B                     ADCON3          equ	3931	;# 
   321   000F5C                     ADACQ           equ	3932	;# 
   322   000F5D                     ADCAP           equ	3933	;# 
   323   000F5E                     ADPRE           equ	3934	;# 
   324   000F5F                     ADPCH           equ	3935	;# 
   325   000F60                     ADCON0          equ	3936	;# 
   326   000F61                     ADPREV          equ	3937	;# 
   327   000F61                     ADPREVL         equ	3937	;# 
   328   000F62                     ADPREVH         equ	3938	;# 
   329   000F63                     ADRES           equ	3939	;# 
   330   000F63                     ADRESL          equ	3939	;# 
   331   000F64                     ADRESH          equ	3940	;# 
   332   000F65                     ADSTAT          equ	3941	;# 
   333   000F66                     ADRPT           equ	3942	;# 
   334   000F67                     ADCNT           equ	3943	;# 
   335   000F68                     ADSTPT          equ	3944	;# 
   336   000F68                     ADSTPTL         equ	3944	;# 
   337   000F69                     ADSTPTH         equ	3945	;# 
   338   000F6A                     ADLTH           equ	3946	;# 
   339   000F6A                     ADLTHL          equ	3946	;# 
   340   000F6B                     ADLTHH          equ	3947	;# 
   341   000F6C                     ADUTH           equ	3948	;# 
   342   000F6C                     ADUTHL          equ	3948	;# 
   343   000F6D                     ADUTHH          equ	3949	;# 
   344   000F6E                     ADERR           equ	3950	;# 
   345   000F6E                     ADERRL          equ	3950	;# 
   346   000F6F                     ADERRH          equ	3951	;# 
   347   000F70                     ADACC           equ	3952	;# 
   348   000F70                     ADACCL          equ	3952	;# 
   349   000F71                     ADACCH          equ	3953	;# 
   350   000F72                     ADFLTR          equ	3954	;# 
   351   000F72                     ADFLTRL         equ	3954	;# 
   352   000F73                     ADFLTRH         equ	3955	;# 
   353   000F74                     CRCDATA         equ	3956	;# 
   354   000F74                     CRCDATL         equ	3956	;# 
   355   000F75                     CRCDATH         equ	3957	;# 
   356   000F76                     CRCACC          equ	3958	;# 
   357   000F76                     CRCACCL         equ	3958	;# 
   358   000F77                     CRCACCH         equ	3959	;# 
   359   000F78                     CRCSHFT         equ	3960	;# 
   360   000F78                     CRCSHIFTL       equ	3960	;# 
   361   000F79                     CRCSHIFTH       equ	3961	;# 
   362   000F7A                     CRCXOR          equ	3962	;# 
   363   000F7A                     CRCXORL         equ	3962	;# 
   364   000F7B                     CRCXORH         equ	3963	;# 
   365   000F7C                     CRCCON0         equ	3964	;# 
   366   000F7D                     CRCCON1         equ	3965	;# 
   367   000F7E                     NVMADR          equ	3966	;# 
   368   000F7E                     NVMADRL         equ	3966	;# 
   369   000F7F                     NVMADRH         equ	3967	;# 
   370   000F80                     NVMDAT          equ	3968	;# 
   371   000F81                     NVMCON1         equ	3969	;# 
   372   000F82                     NVMCON2         equ	3970	;# 
   373   000F83                     LATA            equ	3971	;# 
   374   000F84                     LATB            equ	3972	;# 
   375   000F85                     LATC            equ	3973	;# 
   376   000F86                     LATD            equ	3974	;# 
   377   000F87                     LATE            equ	3975	;# 
   378   000F88                     TRISA           equ	3976	;# 
   379   000F88                     DDRA            equ	3976	;# 
   380   000F89                     TRISB           equ	3977	;# 
   381   000F89                     DDRB            equ	3977	;# 
   382   000F8A                     TRISC           equ	3978	;# 
   383   000F8A                     DDRC            equ	3978	;# 
   384   000F8B                     TRISD           equ	3979	;# 
   385   000F8B                     DDRD            equ	3979	;# 
   386   000F8C                     TRISE           equ	3980	;# 
   387   000F8C                     DDRE            equ	3980	;# 
   388   000F8D                     PORTA           equ	3981	;# 
   389   000F8E                     PORTB           equ	3982	;# 
   390   000F8F                     PORTC           equ	3983	;# 
   391   000F90                     PORTD           equ	3984	;# 
   392   000F91                     PORTE           equ	3985	;# 
   393   000F92                     SSP1BUF         equ	3986	;# 
   394   000F93                     SSP1ADD         equ	3987	;# 
   395   000F94                     SSP1MSK         equ	3988	;# 
   396   000F95                     SSP1STAT        equ	3989	;# 
   397   000F96                     SSP1CON1        equ	3990	;# 
   398   000F97                     SSP1CON2        equ	3991	;# 
   399   000F98                     SSP1CON3        equ	3992	;# 
   400   000F99                     RC1REG          equ	3993	;# 
   401   000F99                     RCREG           equ	3993	;# 
   402   000F99                     RCREG1          equ	3993	;# 
   403   000F9A                     TX1REG          equ	3994	;# 
   404   000F9A                     TXREG1          equ	3994	;# 
   405   000F9A                     TXREG           equ	3994	;# 
   406   000F9B                     SP1BRG          equ	3995	;# 
   407   000F9B                     SP1BRGL         equ	3995	;# 
   408   000F9B                     SPBRG           equ	3995	;# 
   409   000F9B                     SPBRG1          equ	3995	;# 
   410   000F9B                     SPBRGL          equ	3995	;# 
   411   000F9C                     SP1BRGH         equ	3996	;# 
   412   000F9C                     SPBRGH          equ	3996	;# 
   413   000F9C                     SPBRGH1         equ	3996	;# 
   414   000F9D                     RC1STA          equ	3997	;# 
   415   000F9D                     RCSTA1          equ	3997	;# 
   416   000F9D                     RCSTA           equ	3997	;# 
   417   000F9E                     TX1STA          equ	3998	;# 
   418   000F9E                     TXSTA1          equ	3998	;# 
   419   000F9E                     TXSTA           equ	3998	;# 
   420   000F9F                     BAUD1CON        equ	3999	;# 
   421   000F9F                     BAUDCON1        equ	3999	;# 
   422   000F9F                     BAUDCTL1        equ	3999	;# 
   423   000F9F                     BAUDCON         equ	3999	;# 
   424   000F9F                     BAUDCTL         equ	3999	;# 
   425   000FA0                     PWM4DC          equ	4000	;# 
   426   000FA0                     PWM4DCL         equ	4000	;# 
   427   000FA1                     PWM4DCH         equ	4001	;# 
   428   000FA2                     PWM4CON         equ	4002	;# 
   429   000FA3                     PWM3DC          equ	4003	;# 
   430   000FA3                     PWM3DCL         equ	4003	;# 
   431   000FA4                     PWM3DCH         equ	4004	;# 
   432   000FA5                     PWM3CON         equ	4005	;# 
   433   000FA6                     CCPR2           equ	4006	;# 
   434   000FA6                     CCPR2L          equ	4006	;# 
   435   000FA7                     CCPR2H          equ	4007	;# 
   436   000FA8                     CCP2CON         equ	4008	;# 
   437   000FA9                     CCP2CAP         equ	4009	;# 
   438   000FAA                     CCPR1           equ	4010	;# 
   439   000FAA                     CCPR1L          equ	4010	;# 
   440   000FAB                     CCPR1H          equ	4011	;# 
   441   000FAC                     CCP1CON         equ	4012	;# 
   442   000FAD                     CCP1CAP         equ	4013	;# 
   443   000FAE                     CCPTMRS         equ	4014	;# 
   444   000FAF                     T6TMR           equ	4015	;# 
   445   000FAF                     TMR6            equ	4015	;# 
   446   000FB0                     T6PR            equ	4016	;# 
   447   000FB0                     PR6             equ	4016	;# 
   448   000FB1                     T6CON           equ	4017	;# 
   449   000FB2                     T6HLT           equ	4018	;# 
   450   000FB3                     T6CLKCON        equ	4019	;# 
   451   000FB3                     T6CLK           equ	4019	;# 
   452   000FB4                     T6RST           equ	4020	;# 
   453   000FB5                     T4TMR           equ	4021	;# 
   454   000FB5                     TMR4            equ	4021	;# 
   455   000FB6                     T4PR            equ	4022	;# 
   456   000FB6                     PR4             equ	4022	;# 
   457   000FB7                     T4CON           equ	4023	;# 
   458   000FB8                     T4HLT           equ	4024	;# 
   459   000FB9                     T4CLKCON        equ	4025	;# 
   460   000FB9                     T4CLK           equ	4025	;# 
   461   000FBA                     T4RST           equ	4026	;# 
   462   000FBB                     T2TMR           equ	4027	;# 
   463   000FBB                     TMR2            equ	4027	;# 
   464   000FBC                     T2PR            equ	4028	;# 
   465   000FBC                     PR2             equ	4028	;# 
   466   000FBD                     T2CON           equ	4029	;# 
   467   000FBE                     T2HLT           equ	4030	;# 
   468   000FBF                     T2CLKCON        equ	4031	;# 
   469   000FBF                     T2CLK           equ	4031	;# 
   470   000FC0                     T2RST           equ	4032	;# 
   471   000FC1                     TMR5            equ	4033	;# 
   472   000FC1                     TMR5L           equ	4033	;# 
   473   000FC2                     TMR5H           equ	4034	;# 
   474   000FC3                     T5CON           equ	4035	;# 
   475   000FC4                     T5GCON          equ	4036	;# 
   476   000FC4                     PR5             equ	4036	;# 
   477   000FC5                     T5GATE          equ	4037	;# 
   478   000FC5                     TMR5GATE        equ	4037	;# 
   479   000FC6                     T5CLK           equ	4038	;# 
   480   000FC6                     TMR5CLK         equ	4038	;# 
   481   000FC7                     TMR3            equ	4039	;# 
   482   000FC7                     TMR3L           equ	4039	;# 
   483   000FC8                     TMR3H           equ	4040	;# 
   484   000FC9                     T3CON           equ	4041	;# 
   485   000FCA                     T3GCON          equ	4042	;# 
   486   000FCA                     PR3             equ	4042	;# 
   487   000FCB                     T3GATE          equ	4043	;# 
   488   000FCB                     TMR3GATE        equ	4043	;# 
   489   000FCC                     T3CLK           equ	4044	;# 
   490   000FCC                     TMR3CLK         equ	4044	;# 
   491   000FCD                     TMR1            equ	4045	;# 
   492   000FCD                     TMR1L           equ	4045	;# 
   493   000FCE                     TMR1H           equ	4046	;# 
   494   000FCF                     T1CON           equ	4047	;# 
   495   000FD0                     T1GCON          equ	4048	;# 
   496   000FD0                     PR1             equ	4048	;# 
   497   000FD1                     T1GATE          equ	4049	;# 
   498   000FD1                     TMR1GATE        equ	4049	;# 
   499   000FD2                     T1CLK           equ	4050	;# 
   500   000FD2                     TMR1CLK         equ	4050	;# 
   501   000FD3                     TMR0L           equ	4051	;# 
   502   000FD3                     TMR0            equ	4051	;# 
   503   000FD4                     TMR0H           equ	4052	;# 
   504   000FD4                     PR0             equ	4052	;# 
   505   000FD5                     T0CON0          equ	4053	;# 
   506   000FD6                     T0CON1          equ	4054	;# 
   507   000FD7                     PCON0           equ	4055	;# 
   508   000FD8                     STATUS          equ	4056	;# 
   509   000FD9                     FSR2            equ	4057	;# 
   510   000FD9                     FSR2L           equ	4057	;# 
   511   000FDA                     FSR2H           equ	4058	;# 
   512   000FDB                     PLUSW2          equ	4059	;# 
   513   000FDC                     PREINC2         equ	4060	;# 
   514   000FDD                     POSTDEC2        equ	4061	;# 
   515   000FDE                     POSTINC2        equ	4062	;# 
   516   000FDF                     INDF2           equ	4063	;# 
   517   000FE0                     BSR             equ	4064	;# 
   518   000FE1                     FSR1            equ	4065	;# 
   519   000FE1                     FSR1L           equ	4065	;# 
   520   000FE2                     FSR1H           equ	4066	;# 
   521   000FE3                     PLUSW1          equ	4067	;# 
   522   000FE4                     PREINC1         equ	4068	;# 
   523   000FE5                     POSTDEC1        equ	4069	;# 
   524   000FE6                     POSTINC1        equ	4070	;# 
   525   000FE7                     INDF1           equ	4071	;# 
   526   000FE8                     WREG            equ	4072	;# 
   527   000FE9                     FSR0            equ	4073	;# 
   528   000FE9                     FSR0L           equ	4073	;# 
   529   000FEA                     FSR0H           equ	4074	;# 
   530   000FEB                     PLUSW0          equ	4075	;# 
   531   000FEC                     PREINC0         equ	4076	;# 
   532   000FED                     POSTDEC0        equ	4077	;# 
   533   000FEE                     POSTINC0        equ	4078	;# 
   534   000FEF                     INDF0           equ	4079	;# 
   535   000FF2                     INTCON          equ	4082	;# 
   536   000FF3                     PROD            equ	4083	;# 
   537   000FF3                     PRODL           equ	4083	;# 
   538   000FF4                     PRODH           equ	4084	;# 
   539   000FF5                     TABLAT          equ	4085	;# 
   540   000FF6                     TBLPTR          equ	4086	;# 
   541   000FF6                     TBLPTRL         equ	4086	;# 
   542   000FF7                     TBLPTRH         equ	4087	;# 
   543   000FF8                     TBLPTRU         equ	4088	;# 
   544   000FF9                     PCLAT           equ	4089	;# 
   545   000FF9                     PC              equ	4089	;# 
   546   000FF9                     PCL             equ	4089	;# 
   547   000FFA                     PCLATH          equ	4090	;# 
   548   000FFB                     PCLATU          equ	4091	;# 
   549   000FFC                     STKPTR          equ	4092	;# 
   550   000FFD                     TOS             equ	4093	;# 
   551   000FFD                     TOSL            equ	4093	;# 
   552   000FFE                     TOSH            equ	4094	;# 
   553   000FFF                     TOSU            equ	4095	;# 
   554                           
   555                           	psect	idataCOMRAM
   556   001080                     __pidataCOMRAM:
   557                           	callstack 0
   558                           
   559                           ;initializer for main@F10131
   560   001080  0000               	dw	0
   561   001082  0001               	dw	1
   562   001084  0002               	dw	2
   563   000F21                     _ANSELC         set	3873
   564   000F19                     _ANSELB         set	3865
   565   000F84                     _LATB           set	3972
   566   000F8A                     _TRISC          set	3978
   567   000F89                     _TRISB          set	3977
   568                           
   569                           ; #config settings
   570                           
   571                           	psect	cinit
   572   00105A                     __pcinit:
   573                           	callstack 0
   574   00105A                     start_initialization:
   575                           	callstack 0
   576   00105A                     __initialization:
   577                           	callstack 0
   578                           
   579                           ; Initialize objects allocated to COMRAM (6 bytes)
   580                           ; load TBLPTR registers with __pidataCOMRAM
   581   00105A  0E80               	movlw	low __pidataCOMRAM
   582   00105C  6EF6               	movwf	tblptrl,c
   583   00105E  0E10               	movlw	high __pidataCOMRAM
   584   001060  6EF7               	movwf	tblptrh,c
   585   001062  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   586   001064  6EF8               	movwf	tblptru,c
   587   001066  EE00  F010         	lfsr	0,__pdataCOMRAM
   588   00106A  EE10 F006          	lfsr	1,6
   589   00106E                     copy_data0:
   590   00106E  0009               	tblrd		*+
   591   001070  CFF5 FFEE          	movff	tablat,postinc0
   592   001074  50E5               	movf	postdec1,w,c
   593   001076  50E1               	movf	fsr1l,w,c
   594   001078  E1FA               	bnz	copy_data0
   595   00107A                     end_of_initialization:
   596                           	callstack 0
   597   00107A                     __end_of__initialization:
   598                           	callstack 0
   599   00107A  0100               	movlb	0
   600   00107C  EFD8  F007         	goto	_main	;jump to C main() function
   601                           
   602                           	psect	dataCOMRAM
   603   000010                     __pdataCOMRAM:
   604                           	callstack 0
   605   000010                     main@F10131:
   606                           	callstack 0
   607   000010                     	ds	6
   608                           
   609                           	psect	cstackCOMRAM
   610   000001                     __pcstackCOMRAM:
   611                           	callstack 0
   612   000001                     ?___awmod:
   613                           	callstack 0
   614   000001                     ___awmod@dividend:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x0
   618   000001                     	ds	2
   619   000003                     ___awmod@divisor:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x2
   623   000003                     	ds	2
   624   000005                     ___awmod@counter:
   625                           	callstack 0
   626   000005                     
   627                           ; 1 bytes @ 0x4
   628   000005                     	ds	1
   629   000006                     ___awmod@sign:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x5
   633   000006                     	ds	1
   634   000007                     ??_main:
   635                           
   636                           ; 1 bytes @ 0x6
   637   000007                     	ds	2
   638   000009                     main@i:
   639                           	callstack 0
   640                           
   641                           ; 6 bytes @ 0x8
   642   000009                     	ds	6
   643   00000F                     main@j:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0xE
   647   00000F                     	ds	1
   648                           
   649 ;;
   650 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   651 ;;
   652 ;; *************** function _main *****************
   653 ;; Defined at:
   654 ;;		line 44 in file "main.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;  j               1   14[COMRAM] unsigned char 
   659 ;;  i               6    8[COMRAM] int [3]
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   670 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   671 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   672 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   673 ;;Total ram usage:        9 bytes
   674 ;; Hardware stack levels required when called: 1
   675 ;; This function calls:
   676 ;;		___awmod
   677 ;; This function is called by:
   678 ;;		Startup code after reset
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text0
   683   000FB0                     __ptext0:
   684                           	callstack 0
   685   000FB0                     _main:
   686                           	callstack 30
   687   000FB0                     
   688                           ;main.c: 46:     ANSELB = 0;
   689   000FB0  010F               	movlb	15	; () banked
   690   000FB2  6B19               	clrf	25,b	;volatile
   691                           
   692                           ;main.c: 48:     TRISB = 0b00000000;
   693   000FB4  6A89               	clrf	137,c	;volatile
   694                           
   695                           ;main.c: 49:     ANSELC = 0;
   696   000FB6  6B21               	clrf	33,b	;volatile
   697                           
   698                           ;main.c: 50:     TRISC = 0xFF;
   699   000FB8  688A               	setf	138,c	;volatile
   700   000FBA                     
   701                           ; BSR set to: 15
   702                           ;main.c: 52:     LATB = 0b00000001;
   703   000FBA  0E01               	movlw	1
   704   000FBC  6E84               	movwf	132,c	;volatile
   705   000FBE                     
   706                           ; BSR set to: 15
   707                           ;main.c: 53:     int i[] = {0,1,2};
   708   000FBE  EE20  F010         	lfsr	2,main@F10131
   709   000FC2  EE10  F009         	lfsr	1,main@i
   710   000FC6  0E05               	movlw	5
   711   000FC8                     u161:
   712   000FC8  CFDB FFE3          	movff	plusw2,plusw1
   713   000FCC  06E8               	decf	wreg,f,c
   714   000FCE  E2FC               	bc	u161
   715   000FD0                     l910:
   716                           
   717                           ;main.c: 55:     {;main.c: 63:          LATB = 0;
   718   000FD0  6A84               	clrf	132,c	;volatile
   719   000FD2                     
   720                           ;main.c: 65:            for(j = 0;j<3;j++){
   721   000FD2  6A0F               	clrf	main@j^0,c
   722   000FD4                     l920:
   723                           
   724                           ;main.c: 66:                LATB |= (1<<i[j]);
   725   000FD4  500F               	movf	main@j^0,w,c
   726   000FD6  0D02               	mullw	2
   727   000FD8  50F3               	movf	243,w,c
   728   000FDA  0F09               	addlw	low main@i
   729   000FDC  6ED9               	movwf	fsr2l,c
   730   000FDE  6ADA               	clrf	fsr2h,c
   731   000FE0  50DF               	movf	indf2,w,c
   732   000FE2  6E07               	movwf	??_main^0,c
   733   000FE4  0E01               	movlw	1
   734   000FE6  6E08               	movwf	(??_main+1)^0,c
   735   000FE8  2A07               	incf	??_main^0,f,c
   736   000FEA  EFF9  F007         	goto	u174
   737   000FEE                     u175:
   738   000FEE  90D8               	bcf	status,0,c
   739   000FF0  3608               	rlcf	(??_main+1)^0,f,c
   740   000FF2                     u174:
   741   000FF2  2E07               	decfsz	??_main^0,f,c
   742   000FF4  EFF7  F007         	goto	u175
   743   000FF8  5008               	movf	(??_main+1)^0,w,c
   744   000FFA  1284               	iorwf	132,f,c	;volatile
   745                           
   746                           ;main.c: 67:                i[j] +=1;
   747   000FFC  500F               	movf	main@j^0,w,c
   748   000FFE  0D02               	mullw	2
   749   001000  50F3               	movf	243,w,c
   750   001002  0F09               	addlw	low main@i
   751   001004  6ED9               	movwf	fsr2l,c
   752   001006  6ADA               	clrf	fsr2h,c
   753   001008  2ADE               	incf	postinc2,f,c
   754   00100A  0E00               	movlw	0
   755   00100C  22DD               	addwfc	postdec2,f,c
   756   00100E                     
   757                           ;main.c: 68:                i[j] = i[j]%7;
   758   00100E  500F               	movf	main@j^0,w,c
   759   001010  0D02               	mullw	2
   760   001012  50F3               	movf	243,w,c
   761   001014  0F09               	addlw	low main@i
   762   001016  6ED9               	movwf	fsr2l,c
   763   001018  6ADA               	clrf	fsr2h,c
   764   00101A  CFDE F001          	movff	postinc2,___awmod@dividend
   765   00101E  CFDD F002          	movff	postdec2,___awmod@dividend+1
   766   001022  6A04               	clrf	(___awmod@divisor+1)^0,c
   767   001024  0E07               	movlw	7
   768   001026  6E03               	movwf	___awmod@divisor^0,c
   769   001028  EC81  F007         	call	___awmod	;wreg free
   770   00102C  500F               	movf	main@j^0,w,c
   771   00102E  0D02               	mullw	2
   772   001030  50F3               	movf	243,w,c
   773   001032  0F09               	addlw	low main@i
   774   001034  6ED9               	movwf	fsr2l,c
   775   001036  6ADA               	clrf	fsr2h,c
   776   001038  C001  FFDE         	movff	?___awmod,postinc2
   777   00103C  C002  FFDD         	movff	?___awmod+1,postdec2
   778   001040                     
   779                           ;main.c: 69:            }
   780   001040  2A0F               	incf	main@j^0,f,c
   781   001042  0E02               	movlw	2
   782   001044  640F               	cpfsgt	main@j^0,c
   783   001046  EF27  F008         	goto	u181
   784   00104A  EF29  F008         	goto	u180
   785   00104E                     u181:
   786   00104E  EFEA  F007         	goto	l920
   787   001052                     u180:
   788   001052  EFE8  F007         	goto	l910
   789   001056  EFFE  F0FF         	goto	start
   790   00105A                     __end_of_main:
   791                           	callstack 0
   792                           
   793 ;; *************** function ___awmod *****************
   794 ;; Defined at:
   795 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\awmod.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;  dividend        2    0[COMRAM] int 
   798 ;;  divisor         2    2[COMRAM] int 
   799 ;; Auto vars:     Size  Location     Type
   800 ;;  sign            1    5[COMRAM] unsigned char 
   801 ;;  counter         1    4[COMRAM] unsigned char 
   802 ;; Return value:  Size  Location     Type
   803 ;;                  2    0[COMRAM] int 
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   812 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   814 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   815 ;;Total ram usage:        6 bytes
   816 ;; Hardware stack levels used: 1
   817 ;; This function calls:
   818 ;;		Nothing
   819 ;; This function is called by:
   820 ;;		_main
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text1
   825   000F02                     __ptext1:
   826                           	callstack 0
   827   000F02                     ___awmod:
   828                           	callstack 30
   829   000F02  6A06               	clrf	___awmod@sign^0,c
   830   000F04  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   831   000F06  EF89  F007         	goto	u100
   832   000F0A  EF87  F007         	goto	u101
   833   000F0E                     u101:
   834   000F0E  EF8F  F007         	goto	l876
   835   000F12                     u100:
   836   000F12  6C01               	negf	___awmod@dividend^0,c
   837   000F14  1E02               	comf	(___awmod@dividend+1)^0,f,c
   838   000F16  B0D8               	btfsc	status,0,c
   839   000F18  2A02               	incf	(___awmod@dividend+1)^0,f,c
   840   000F1A  0E01               	movlw	1
   841   000F1C  6E06               	movwf	___awmod@sign^0,c
   842   000F1E                     l876:
   843   000F1E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   844   000F20  EF96  F007         	goto	u110
   845   000F24  EF94  F007         	goto	u111
   846   000F28                     u111:
   847   000F28  EF9A  F007         	goto	l880
   848   000F2C                     u110:
   849   000F2C  6C03               	negf	___awmod@divisor^0,c
   850   000F2E  1E04               	comf	(___awmod@divisor+1)^0,f,c
   851   000F30  B0D8               	btfsc	status,0,c
   852   000F32  2A04               	incf	(___awmod@divisor+1)^0,f,c
   853   000F34                     l880:
   854   000F34  5003               	movf	___awmod@divisor^0,w,c
   855   000F36  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   856   000F38  B4D8               	btfsc	status,2,c
   857   000F3A  EFA1  F007         	goto	u121
   858   000F3E  EFA3  F007         	goto	u120
   859   000F42                     u121:
   860   000F42  EFC7  F007         	goto	l896
   861   000F46                     u120:
   862   000F46  0E01               	movlw	1
   863   000F48  6E05               	movwf	___awmod@counter^0,c
   864   000F4A  EFAB  F007         	goto	l886
   865   000F4E                     l884:
   866   000F4E  90D8               	bcf	status,0,c
   867   000F50  3603               	rlcf	___awmod@divisor^0,f,c
   868   000F52  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   869   000F54  2A05               	incf	___awmod@counter^0,f,c
   870   000F56                     l886:
   871   000F56  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   872   000F58  EFB0  F007         	goto	u131
   873   000F5C  EFB2  F007         	goto	u130
   874   000F60                     u131:
   875   000F60  EFA7  F007         	goto	l884
   876   000F64                     u130:
   877   000F64                     l888:
   878   000F64  5003               	movf	___awmod@divisor^0,w,c
   879   000F66  5C01               	subwf	___awmod@dividend^0,w,c
   880   000F68  5004               	movf	(___awmod@divisor+1)^0,w,c
   881   000F6A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   882   000F6C  A0D8               	btfss	status,0,c
   883   000F6E  EFBB  F007         	goto	u141
   884   000F72  EFBD  F007         	goto	u140
   885   000F76                     u141:
   886   000F76  EFC1  F007         	goto	l892
   887   000F7A                     u140:
   888   000F7A  5003               	movf	___awmod@divisor^0,w,c
   889   000F7C  5E01               	subwf	___awmod@dividend^0,f,c
   890   000F7E  5004               	movf	(___awmod@divisor+1)^0,w,c
   891   000F80  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   892   000F82                     l892:
   893   000F82  90D8               	bcf	status,0,c
   894   000F84  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   895   000F86  3203               	rrcf	___awmod@divisor^0,f,c
   896   000F88  2E05               	decfsz	___awmod@counter^0,f,c
   897   000F8A  EFB2  F007         	goto	l888
   898   000F8E                     l896:
   899   000F8E  5006               	movf	___awmod@sign^0,w,c
   900   000F90  B4D8               	btfsc	status,2,c
   901   000F92  EFCD  F007         	goto	u151
   902   000F96  EFCF  F007         	goto	u150
   903   000F9A                     u151:
   904   000F9A  EFD3  F007         	goto	l900
   905   000F9E                     u150:
   906   000F9E  6C01               	negf	___awmod@dividend^0,c
   907   000FA0  1E02               	comf	(___awmod@dividend+1)^0,f,c
   908   000FA2  B0D8               	btfsc	status,0,c
   909   000FA4  2A02               	incf	(___awmod@dividend+1)^0,f,c
   910   000FA6                     l900:
   911   000FA6  C001  F001         	movff	___awmod@dividend,?___awmod
   912   000FAA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   913   000FAE  0012               	return		;funcret
   914   000FB0                     __end_of___awmod:
   915                           	callstack 0
   916                           
   917                           	psect	smallconst
   918   000F00                     __psmallconst:
   919                           	callstack 0
   920   000F00  00                 	db	0
   921   000F01  00                 	db	0	; dummy byte at the end
   922   000F00                     __smallconst    set	__psmallconst
   923   000F00                     __mediumconst   set	__psmallconst
   924   000000                     __activetblptr  equ	0
   925                           
   926                           	psect	rparam
   927   000001                     ___rparam_used  equ	1
   928   000000                     ___param_bank   equ	0
   929   000000                     __Lparam        equ	__Lrparam
   930   000000                     __Hparam        equ	__Hrparam
   931                           
   932                           	psect	idloc
   933                           
   934                           ;Config register IDLOC0 @ 0x200000
   935                           ;	unspecified, using default values
   936   200000                     	org	2097152
   937   200000  FFFF               	dw	65535
   938                           
   939                           ;Config register IDLOC1 @ 0x200002
   940                           ;	unspecified, using default values
   941   200002                     	org	2097154
   942   200002  FFFF               	dw	65535
   943                           
   944                           ;Config register IDLOC2 @ 0x200004
   945                           ;	unspecified, using default values
   946   200004                     	org	2097156
   947   200004  FFFF               	dw	65535
   948                           
   949                           ;Config register IDLOC3 @ 0x200006
   950                           ;	unspecified, using default values
   951   200006                     	org	2097158
   952   200006  FFFF               	dw	65535
   953                           
   954                           ;Config register IDLOC4 @ 0x200008
   955                           ;	unspecified, using default values
   956   200008                     	org	2097160
   957   200008  FFFF               	dw	65535
   958                           
   959                           ;Config register IDLOC5 @ 0x20000A
   960                           ;	unspecified, using default values
   961   20000A                     	org	2097162
   962   20000A  FFFF               	dw	65535
   963                           
   964                           ;Config register IDLOC6 @ 0x20000C
   965                           ;	unspecified, using default values
   966   20000C                     	org	2097164
   967   20000C  FFFF               	dw	65535
   968                           
   969                           ;Config register IDLOC7 @ 0x20000E
   970                           ;	unspecified, using default values
   971   20000E                     	org	2097166
   972   20000E  FFFF               	dw	65535
   973                           
   974                           	psect	config
   975                           
   976                           ;Config register CONFIG1L @ 0x300000
   977                           ;	External Oscillator mode Selection bits
   978                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
   979                           ;	Power-up default value for COSC bits
   980                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
   981   300000                     	org	3145728
   982   300000  FA                 	db	250
   983                           
   984                           ;Config register CONFIG1H @ 0x300001
   985                           ;	Clock Out Enable bit
   986                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   987                           ;	Clock Switch Enable bit
   988                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   989                           ;	Fail-Safe Clock Monitor Enable bit
   990                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   991   300001                     	org	3145729
   992   300001  FF                 	db	255
   993                           
   994                           ;Config register CONFIG2L @ 0x300002
   995                           ;	Master Clear Enable bit
   996                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
   997                           ;	Power-up Timer Enable bit
   998                           ;	PWRTE = OFF, Power up timer disabled
   999                           ;	Low-power BOR enable bit
  1000                           ;	LPBOREN = OFF, ULPBOR disabled
  1001                           ;	Brown-out Reset Enable bits
  1002                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1003   300002                     	org	3145730
  1004   300002  FF                 	db	255
  1005                           
  1006                           ;Config register CONFIG2H @ 0x300003
  1007                           ;	Brown Out Reset Voltage selection bits
  1008                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1009                           ;	ZCD Disable bit
  1010                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1011                           ;	PPSLOCK bit One-Way Set Enable bit
  1012                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1013                           ;	Stack Full/Underflow Reset Enable bit
  1014                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1015                           ;	Debugger Enable bit
  1016                           ;	DEBUG = OFF, Background debugger disabled
  1017                           ;	Extended Instruction Set Enable bit
  1018                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1019   300003                     	org	3145731
  1020   300003  FF                 	db	255
  1021                           
  1022                           ;Config register CONFIG3L @ 0x300004
  1023                           ;	WDT Period Select bits
  1024                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1025                           ;	WDT operating mode
  1026                           ;	WDTE = OFF, WDT Disabled
  1027   300004                     	org	3145732
  1028   300004  9F                 	db	159
  1029                           
  1030                           ;Config register CONFIG3H @ 0x300005
  1031                           ;	WDT Window Select bits
  1032                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1033                           ;	WDT input clock selector
  1034                           ;	WDTCCS = SC, Software Control
  1035   300005                     	org	3145733
  1036   300005  FF                 	db	255
  1037                           
  1038                           ;Config register CONFIG4L @ 0x300006
  1039                           ;	unspecified, using default values
  1040                           ;	Write Protection Block 0
  1041                           ;	WRT0 = 0x1, unprogrammed default
  1042                           ;	Write Protection Block 1
  1043                           ;	WRT1 = 0x1, unprogrammed default
  1044                           ;	Write Protection Block 2
  1045                           ;	WRT2 = 0x1, unprogrammed default
  1046                           ;	Write Protection Block 3
  1047                           ;	WRT3 = 0x1, unprogrammed default
  1048                           ;	Write Protection Block 3
  1049                           ;	WRT4 = 0x1, unprogrammed default
  1050                           ;	Write Protection Block 3
  1051                           ;	WRT5 = 0x1, unprogrammed default
  1052                           ;	Write Protection Block 3
  1053                           ;	WRT6 = 0x1, unprogrammed default
  1054                           ;	Write Protection Block 3
  1055                           ;	WRT7 = 0x1, unprogrammed default
  1056   300006                     	org	3145734
  1057   300006  FF                 	db	255
  1058                           
  1059                           ;Config register CONFIG4H @ 0x300007
  1060                           ;	Configuration Register Write Protection bit
  1061                           ;	WRTC = 0x1, unprogrammed default
  1062                           ;	Boot Block Write Protection bit
  1063                           ;	WRTB = 0x1, unprogrammed default
  1064                           ;	Data EEPROM Write Protection bit
  1065                           ;	WRTD = 0x1, unprogrammed default
  1066                           ;	Scanner Enable bit
  1067                           ;	SCANE = 0x1, unprogrammed default
  1068                           ;	Low Voltage Programming Enable bit
  1069                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  1070   300007                     	org	3145735
  1071   300007  DF                 	db	223
  1072                           
  1073                           ;Config register CONFIG5L @ 0x300008
  1074                           ;	unspecified, using default values
  1075                           ;	UserNVM Program Memory Code Protection bit
  1076                           ;	CP = 0x1, unprogrammed default
  1077                           ;	DataNVM Memory Code Protection bit
  1078                           ;	CPD = 0x1, unprogrammed default
  1079   300008                     	org	3145736
  1080   300008  FF                 	db	255
  1081                           
  1082                           ;Config register CONFIG5H @ 0x300009
  1083                           ;	unspecified, using default values
  1084   300009                     	org	3145737
  1085   300009  FF                 	db	255
  1086                           
  1087                           ;Config register CONFIG6L @ 0x30000A
  1088                           ;	unspecified, using default values
  1089                           ;	Table Read Protection Block 0
  1090                           ;	EBTR0 = 0x1, unprogrammed default
  1091                           ;	Table Read Protection Block 1
  1092                           ;	EBTR1 = 0x1, unprogrammed default
  1093                           ;	Table Read Protection Block 2
  1094                           ;	EBTR2 = 0x1, unprogrammed default
  1095                           ;	Table Read Protection Block 3
  1096                           ;	EBTR3 = 0x1, unprogrammed default
  1097                           ;	Table Read Protection Block 4
  1098                           ;	EBTR4 = 0x1, unprogrammed default
  1099                           ;	Table Read Protection Block 5
  1100                           ;	EBTR5 = 0x1, unprogrammed default
  1101                           ;	Table Read Protection Block 6
  1102                           ;	EBTR6 = 0x1, unprogrammed default
  1103                           ;	Table Read Protection Block 7
  1104                           ;	EBTR7 = 0x1, unprogrammed default
  1105   30000A                     	org	3145738
  1106   30000A  FF                 	db	255
  1107                           
  1108                           ;Config register CONFIG6H @ 0x30000B
  1109                           ;	unspecified, using default values
  1110                           ;	Boot Block Table Read Protection bit
  1111                           ;	EBTRB = 0x1, unprogrammed default
  1112   30000B                     	org	3145739
  1113   30000B  FF                 	db	255
  1114                           tosu	equ	0xFFF
  1115                           tosh	equ	0xFFE
  1116                           tosl	equ	0xFFD
  1117                           stkptr	equ	0xFFC
  1118                           pclatu	equ	0xFFB
  1119                           pclath	equ	0xFFA
  1120                           pcl	equ	0xFF9
  1121                           tblptru	equ	0xFF8
  1122                           tblptrh	equ	0xFF7
  1123                           tblptrl	equ	0xFF6
  1124                           tablat	equ	0xFF5
  1125                           prodh	equ	0xFF4
  1126                           prodl	equ	0xFF3
  1127                           indf0	equ	0xFEF
  1128                           postinc0	equ	0xFEE
  1129                           postdec0	equ	0xFED
  1130                           preinc0	equ	0xFEC
  1131                           plusw0	equ	0xFEB
  1132                           fsr0h	equ	0xFEA
  1133                           fsr0l	equ	0xFE9
  1134                           wreg	equ	0xFE8
  1135                           indf1	equ	0xFE7
  1136                           postinc1	equ	0xFE6
  1137                           postdec1	equ	0xFE5
  1138                           preinc1	equ	0xFE4
  1139                           plusw1	equ	0xFE3
  1140                           fsr1h	equ	0xFE2
  1141                           fsr1l	equ	0xFE1
  1142                           bsr	equ	0xFE0
  1143                           indf2	equ	0xFDF
  1144                           postinc2	equ	0xFDE
  1145                           postdec2	equ	0xFDD
  1146                           preinc2	equ	0xFDC
  1147                           plusw2	equ	0xFDB
  1148                           fsr2h	equ	0xFDA
  1149                           fsr2l	equ	0xFD9
  1150                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      21
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     528
                                              6 COMRAM     9     9      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3719      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRll        140      0       0      0.0%
BITBANK14          136      0       0      0.0%
BANK14             136      0       0      0.0%
BITBIGSFRh         123      0       0      0.0%
BITBIGSFRlh        106      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     15      21     22.1%
STACK                0      0       0      0.0%
DATA                 0      0      21      0.0%


Microchip Technology PIC18 Macro Assembler V3.10 build 20250813170317 
Symbol Table                                                                                   Mon Sep 29 10:27:37 2025

                    l379 0FAE                      l900 0FA6                      l910 0FD0  
                    l920 0FD4                      l912 0FD2                      l904 0FB0  
                    l922 100E                      l914 0FD2                      l906 0FBA  
                    l924 1040                      l908 0FBE                      l870 0F04  
                    l926 1042                      l880 0F34                      l872 0F12  
                    l890 0F7A                      l882 0F46                      l874 0F1A  
                    l892 0F82                      l884 0F4E                      l876 0F1E  
                    l868 0F02                      l894 0F88                      l886 0F56  
                    l878 0F2C                      l888 0F64                      l896 0F8E  
                    l898 0F9E                      u100 0F12                      u101 0F0E  
                    u110 0F2C                      u111 0F28                      u120 0F46  
                    u121 0F42                      u130 0F64                      u131 0F60  
                    u140 0F7A                      u141 0F76                      u150 0F9E  
                    u151 0F9A                      u161 0FC8                      u180 1052  
                    u181 104E                      u174 0FF2                      u175 0FEE  
           ___awmod@sign 0006                      wreg 0FE8                     _LATB 0F84  
                   _main 0FB0                     fsr2h 0FDA                     indf2 0FDF  
                   fsr1l 0FE1                     fsr2l 0FD9                     prodl 0FF3  
                   start FFFC             ___param_bank 0000                    ?_main 0001  
        __end_of___awmod 0FB0                    _TRISB 0F89                    _TRISC 0F8A  
                  main@i 0009                    main@j 000F                    tablat 0FF5  
                  plusw1 0FE3                    plusw2 0FDB                    status 0FD8  
        __initialization 105A             __end_of_main 105A                   ??_main 0007  
          __activetblptr 0000                   _ANSELB 0F19                   _ANSELC 0F21  
              ??___awmod 0005          ___awmod@divisor 0003                   isa$std 0001  
        ___awmod@counter 0005             __pdataCOMRAM 0010             __mediumconst 0F00  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 107A            ___rparam_used 0001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
                ___awmod 0F02             __psmallconst 0F00                  __pcinit 105A  
                __ramtop 0F00                  __ptext0 0FB0                  __ptext1 0F02  
       ___awmod@dividend 0001     end_of_initialization 107A                  postdec1 0FE5  
                postdec2 0FDD                  postinc0 0FEE                  postinc2 0FDE  
             main@F10131 0010            __pidataCOMRAM 1080      start_initialization 105A  
               ?___awmod 0001              __smallconst 0F00                copy_data0 106E  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 0000  
